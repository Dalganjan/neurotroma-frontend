{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@app/_services\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_div_13_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_13_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is invalid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtemplate(1, LoginComponent_div_13_div_1_Template, 2, 0, \"div\", 20);\n    i0.ɵɵtemplate(2, LoginComponent_div_13_div_2_Template, 2, 0, \"div\", 20);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.email.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.email.errors.email);\n  }\n}\nfunction LoginComponent_div_18_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtemplate(1, LoginComponent_div_18_div_1_Template, 2, 0, \"div\", 20);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.password.errors.required);\n  }\n}\nfunction LoginComponent_span_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 21);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class LoginComponent {\n  constructor(formBuilder, route, router, accountService, alertService) {\n    this.formBuilder = formBuilder;\n    this.route = route;\n    this.router = router;\n    this.accountService = accountService;\n    this.alertService = alertService;\n    this.submitting = false;\n    this.submitted = false;\n  }\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.form.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    // reset alerts on submit\n    this.alertService.clear();\n    // stop here if form is invalid\n    if (this.form.invalid) {\n      return;\n    }\n    this.submitting = true;\n    this.accountService.login(this.f.email.value, this.f.password.value).pipe(first()).subscribe({\n      next: () => {\n        // get return url from query parameters or default to home page\n        //const returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/dashboard';\n        //this.router.navigateByUrl(returnUrl);\n        this.router.navigate(['../dashboard']);\n      },\n      error: error => {\n        this.alertService.error(error);\n        this.submitting = false;\n      }\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AccountService), i0.ɵɵdirectiveInject(i3.AlertService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"ng-component\"]],\n  decls: 29,\n  vars: 11,\n  consts: [[1, \"container\", 2, \"padding\", \"4rem\"], [1, \"row\"], [1, \"col-lg-8\", \"offset-lg-2\", \"mt-5\"], [1, \"card\", \"m-3\"], [1, \"card-header\"], [1, \"container\", \"pt-4\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"email\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\", 3, \"ngClass\"], [1, \"mb-3\", \"col\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [\"routerLink\", \"/account/register\", 1, \"btn\", \"btn-link\"], [1, \"mb-3\", \"col\", \"text-end\"], [\"routerLink\", \"/account/forgot-password\", 1, \"btn\", \"btn-link\", \"pe-0\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h3\", 4);\n      i0.ɵɵtext(5, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 5)(7, \"div\", 6)(8, \"form\", 7);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_8_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(9, \"div\", 8)(10, \"label\", 9);\n      i0.ɵɵtext(11, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 10);\n      i0.ɵɵtemplate(13, LoginComponent_div_13_Template, 3, 2, \"div\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 8)(15, \"label\", 9);\n      i0.ɵɵtext(16, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 12);\n      i0.ɵɵtemplate(18, LoginComponent_div_18_Template, 2, 1, \"div\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 1)(20, \"div\", 13)(21, \"button\", 14);\n      i0.ɵɵtemplate(22, LoginComponent_span_22_Template, 1, 0, \"span\", 15);\n      i0.ɵɵtext(23, \" Login \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"a\", 16);\n      i0.ɵɵtext(25, \"Register\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"div\", 17)(27, \"a\", 18);\n      i0.ɵɵtext(28, \"Forgot Password?\");\n      i0.ɵɵelementEnd()()()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx.submitted && ctx.f.email.errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.email.errors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c0, ctx.submitted && ctx.f.password.errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.password.errors);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", ctx.submitting);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitting);\n    }\n  },\n  dependencies: [i4.NgClass, i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i2.RouterLink],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["Validators","first","i0","LoginComponent","constructor","formBuilder","route","router","accountService","alertService","ngOnInit","form","group","email","required","password","f","controls","onSubmit","submitted","clear","invalid","submitting","login","value","pipe","subscribe","next","navigate","error","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/apple/Documents/neurotroma-frontend/src/app/account/login.component.ts","/Users/apple/Documents/neurotroma-frontend/src/app/account/login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AccountService, AlertService } from '@app/_services';\n\n@Component({ templateUrl: 'login.component.html' })\nexport class LoginComponent implements OnInit {\n    form!: FormGroup;\n    submitting = false;\n    submitted = false;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private accountService: AccountService,\n        private alertService: AlertService\n    ) { }\n\n    ngOnInit() {\n        this.form = this.formBuilder.group({\n            email: ['', [Validators.required, Validators.email]],\n            password: ['', Validators.required]\n        });\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.form.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // reset alerts on submit\n        this.alertService.clear();\n\n        // stop here if form is invalid\n        if (this.form.invalid) {\n            return;\n        }\n\n        this.submitting = true;\n        this.accountService.login(this.f.email.value, this.f.password.value)\n            .pipe(first())\n            .subscribe({\n                next: () => {\n                    // get return url from query parameters or default to home page\n                    //const returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/dashboard';\n                    //this.router.navigateByUrl(returnUrl);\n                    this.router.navigate(['../dashboard']);\n                },\n                error: error => {\n                    this.alertService.error(error);\n                    this.submitting = false;\n                }\n            });\n    }\n}","<div class=\"container\" style=\"padding: 4rem;\">\n    <div class=\"row\">\n        <div class=\"col-lg-8 offset-lg-2 mt-5\">\n            <div class=\"card m-3\">\n                <h3 class=\"card-header\">Login</h3>\n                <div class=\"container pt-4\">\n                    <div class=\"card-body\">\n                        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n                            <div class=\"mb-3\">\n                                <label class=\"form-label\">Email</label>\n                                <input type=\"text\" formControlName=\"email\" class=\"form-control\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n                                <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                                    <div *ngIf=\"f.email.errors.email\">Email is invalid</div>\n                                </div>\n                            </div>\n                            <div class=\"mb-3\">\n                                <label class=\"form-label\">Password</label>\n                                <input type=\"password\" formControlName=\"password\" class=\"form-control\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"mb-3 col\">\n                                    <button [disabled]=\"submitting\" class=\"btn btn-primary\">\n                                        <span *ngIf=\"submitting\" class=\"spinner-border spinner-border-sm me-1\"></span>\n                                        Login\n                                    </button>\n                                    <a routerLink=\"/account/register\" class=\"btn btn-link\">Register</a>\n                                </div>\n                                <div class=\"mb-3 col text-end\">\n                                    <a routerLink=\"/account/forgot-password\" class=\"btn btn-link pe-0\">Forgot\n                                        Password?</a>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}