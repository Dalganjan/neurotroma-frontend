{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { MustMatch } from '@app/_helpers';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@app/_services\";\nimport * as i4 from \"@angular/common\";\nfunction RegisterComponent_div_19_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Title is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵtemplate(1, RegisterComponent_div_19_div_1_Template, 2, 0, \"div\", 33);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.title.errors.required);\n  }\n}\nfunction RegisterComponent_div_24_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"First Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵtemplate(1, RegisterComponent_div_24_div_1_Template, 2, 0, \"div\", 33);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.firstName.errors.required);\n  }\n}\nfunction RegisterComponent_div_29_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Last Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵtemplate(1, RegisterComponent_div_29_div_1_Template, 2, 0, \"div\", 33);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.f.lastName.errors.required);\n  }\n}\nfunction RegisterComponent_div_34_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_34_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email must be a valid email address\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵtemplate(1, RegisterComponent_div_34_div_1_Template, 2, 0, \"div\", 33);\n    i0.ɵɵtemplate(2, RegisterComponent_div_34_div_2_Template, 2, 0, \"div\", 33);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.f.email.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.f.email.errors.email);\n  }\n}\nfunction RegisterComponent_div_39_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Contact Number is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_39_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Contact Number must be valid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵtemplate(1, RegisterComponent_div_39_div_1_Template, 2, 0, \"div\", 33);\n    i0.ɵɵtemplate(2, RegisterComponent_div_39_div_2_Template, 2, 0, \"div\", 33);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.f.contactNumber.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.f.contactNumber.errors.email);\n  }\n}\nfunction RegisterComponent_div_45_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_45_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password must be at least 6 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵtemplate(1, RegisterComponent_div_45_div_1_Template, 2, 0, \"div\", 33);\n    i0.ɵɵtemplate(2, RegisterComponent_div_45_div_2_Template, 2, 0, \"div\", 33);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.f.password.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.f.password.errors.minlength);\n  }\n}\nfunction RegisterComponent_div_50_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Confirm Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_50_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Passwords must match\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_50_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵtemplate(1, RegisterComponent_div_50_div_1_Template, 2, 0, \"div\", 33);\n    i0.ɵɵtemplate(2, RegisterComponent_div_50_div_2_Template, 2, 0, \"div\", 33);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.f.confirmPassword.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.f.confirmPassword.errors.mustMatch);\n  }\n}\nfunction RegisterComponent_div_60_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Please enter role\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_60_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵtemplate(1, RegisterComponent_div_60_div_1_Template, 2, 0, \"div\", 33);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.f.role.errors.required);\n  }\n}\nfunction RegisterComponent_div_65_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵtext(1, \"Accept Ts & Cs is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_span_68_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 34);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class RegisterComponent {\n  constructor(formBuilder, route, router, accountService, alertService) {\n    this.formBuilder = formBuilder;\n    this.route = route;\n    this.router = router;\n    this.accountService = accountService;\n    this.alertService = alertService;\n    this.submitting = false;\n    this.submitted = false;\n  }\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      title: ['', Validators.required],\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      contactNumber: ['', [Validators.required, Validators.minLength(10), Validators.pattern(/^(?:\\+\\d{1,3}\\s*)?\\d{10,15}$/)]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['', Validators.required],\n      acceptTerms: [false, Validators.requiredTrue],\n      role: ['', Validators.required]\n    }, {\n      validator: MustMatch('password', 'confirmPassword')\n    });\n  }\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.form.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    // reset alerts on submit\n    this.alertService.clear();\n    // stop here if form is invalid\n    if (this.form.invalid) {\n      return;\n    }\n    this.submitting = true;\n    this.accountService.register(this.form.value).pipe(first()).subscribe({\n      next: () => {\n        this.alertService.success('Registration successful, please check your email for verification instructions', {\n          keepAfterRouteChange: true\n        });\n        this.router.navigate(['../login'], {\n          relativeTo: this.route\n        });\n      },\n      error: error => {\n        this.alertService.error(error);\n        this.submitting = false;\n      }\n    });\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AccountService), i0.ɵɵdirectiveInject(i3.AlertService));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"ng-component\"]],\n  decls: 72,\n  vars: 39,\n  consts: [[1, \"card-header\"], [1, \"container\", \"pt-4\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"mb-3\", \"col-2\"], [1, \"form-label\"], [\"formControlName\", \"title\", 1, \"form-control\", \"dropdown\", 3, \"ngClass\"], [\"value\", \"\"], [\"value\", \"Mr\"], [\"value\", \"Mrs\"], [\"value\", \"Miss\"], [\"value\", \"Ms\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [1, \"mb-3\", \"col-5\"], [\"type\", \"text\", \"formControlName\", \"firstName\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"text\", \"formControlName\", \"lastName\", 1, \"form-control\", 3, \"ngClass\"], [1, \"mb-3\"], [\"type\", \"text\", \"formControlName\", \"email\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"text\", \"formControlName\", \"contactNumber\", 1, \"form-control\", 3, \"ngClass\"], [1, \"mb-3\", \"col\"], [\"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"password\", \"formControlName\", \"confirmPassword\", 1, \"form-control\", 3, \"ngClass\"], [\"formControlName\", \"role\", 1, \"form-control\", \"dropdown\", 3, \"ngClass\"], [\"value\", \"Assistant\"], [\"value\", \"PromptAdmin\"], [1, \"mb-3\", \"form-check\"], [\"type\", \"checkbox\", \"formControlName\", \"acceptTerms\", \"id\", \"acceptTerms\", 1, \"form-check-input\", 3, \"ngClass\"], [\"for\", \"acceptTerms\", 1, \"form-check-label\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [\"routerLink\", \"../login\", \"href\", \"\", 1, \"btn\", \"btn-link\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h3\", 0);\n      i0.ɵɵtext(1, \"Register\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 2)(4, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"div\", 5)(7, \"label\", 6);\n      i0.ɵɵtext(8, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"select\", 7);\n      i0.ɵɵelement(10, \"option\", 8);\n      i0.ɵɵelementStart(11, \"option\", 9);\n      i0.ɵɵtext(12, \"Mr\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"option\", 10);\n      i0.ɵɵtext(14, \"Mrs\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"option\", 11);\n      i0.ɵɵtext(16, \"Miss\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"option\", 12);\n      i0.ɵɵtext(18, \"Ms\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(19, RegisterComponent_div_19_Template, 2, 1, \"div\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 14)(21, \"label\", 6);\n      i0.ɵɵtext(22, \"First Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"input\", 15);\n      i0.ɵɵtemplate(24, RegisterComponent_div_24_Template, 2, 1, \"div\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"div\", 14)(26, \"label\", 6);\n      i0.ɵɵtext(27, \"Last Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(28, \"input\", 16);\n      i0.ɵɵtemplate(29, RegisterComponent_div_29_Template, 2, 1, \"div\", 13);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(30, \"div\", 17)(31, \"label\", 6);\n      i0.ɵɵtext(32, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(33, \"input\", 18);\n      i0.ɵɵtemplate(34, RegisterComponent_div_34_Template, 3, 2, \"div\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"div\", 17)(36, \"label\", 6);\n      i0.ɵɵtext(37, \"Contact Number\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(38, \"input\", 19);\n      i0.ɵɵtemplate(39, RegisterComponent_div_39_Template, 3, 2, \"div\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"div\", 4)(41, \"div\", 20)(42, \"label\", 6);\n      i0.ɵɵtext(43, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(44, \"input\", 21);\n      i0.ɵɵtemplate(45, RegisterComponent_div_45_Template, 3, 2, \"div\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(46, \"div\", 20)(47, \"label\", 6);\n      i0.ɵɵtext(48, \"Confirm Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(49, \"input\", 22);\n      i0.ɵɵtemplate(50, RegisterComponent_div_50_Template, 3, 2, \"div\", 13);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(51, \"div\", 17)(52, \"label\", 6);\n      i0.ɵɵtext(53, \"Role\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(54, \"select\", 23);\n      i0.ɵɵelement(55, \"option\", 8);\n      i0.ɵɵelementStart(56, \"option\", 24);\n      i0.ɵɵtext(57, \"Assistant\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(58, \"option\", 25);\n      i0.ɵɵtext(59, \"PromptAdmin\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(60, RegisterComponent_div_60_Template, 2, 1, \"div\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(61, \"div\", 26);\n      i0.ɵɵelement(62, \"input\", 27);\n      i0.ɵɵelementStart(63, \"label\", 28);\n      i0.ɵɵtext(64, \"Accept Terms & Conditions\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(65, RegisterComponent_div_65_Template, 2, 0, \"div\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(66, \"div\", 17)(67, \"button\", 29);\n      i0.ɵɵtemplate(68, RegisterComponent_span_68_Template, 1, 0, \"span\", 30);\n      i0.ɵɵtext(69, \" Register \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(70, \"a\", 31);\n      i0.ɵɵtext(71, \"Cancel\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(21, _c0, ctx.submitted && ctx.f.title.errors));\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.title.errors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(23, _c0, ctx.submitted && ctx.f.firstName.errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.firstName.errors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(25, _c0, ctx.submitted && ctx.f.lastName.errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.lastName.errors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(27, _c0, ctx.submitted && ctx.f.email.errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.email.errors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(29, _c0, ctx.submitted && ctx.f.contactNumber.errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.contactNumber.errors);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(31, _c0, ctx.submitted && ctx.f.password.errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.password.errors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(33, _c0, ctx.submitted && ctx.f.confirmPassword.errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.confirmPassword.errors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(35, _c0, ctx.submitted && ctx.f.role.errors));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.role.errors);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(37, _c0, ctx.submitted && ctx.f.acceptTerms.errors));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.acceptTerms.errors);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.submitting);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitting);\n    }\n  },\n  dependencies: [i4.NgClass, i4.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.CheckboxControlValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i2.RouterLink],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["Validators","first","MustMatch","i0","RegisterComponent","constructor","formBuilder","route","router","accountService","alertService","ngOnInit","form","group","title","required","firstName","lastName","email","contactNumber","minLength","pattern","password","confirmPassword","acceptTerms","requiredTrue","role","validator","f","controls","onSubmit","submitted","clear","invalid","submitting","register","value","pipe","subscribe","next","success","keepAfterRouteChange","navigate","relativeTo","error","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/apple/Documents/neurotroma-frontend/src/app/account/register.component.ts","/Users/apple/Documents/neurotroma-frontend/src/app/account/register.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AccountService, AlertService } from '@app/_services';\nimport { MustMatch } from '@app/_helpers';\n\n@Component({ templateUrl: 'register.component.html' })\nexport class RegisterComponent implements OnInit {\n    form!: FormGroup;\n    submitting = false;\n    submitted = false;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private accountService: AccountService,\n        private alertService: AlertService\n    ) { }\n\n    ngOnInit() {\n        this.form = this.formBuilder.group({\n            title: ['', Validators.required],\n            firstName: ['', Validators.required],\n            lastName: ['', Validators.required],\n            email: ['', [Validators.required, Validators.email]],\n            contactNumber: ['', [Validators.required, Validators.minLength(10), Validators.pattern(/^(?:\\+\\d{1,3}\\s*)?\\d{10,15}$/)]],\n            password: ['', [Validators.required, Validators.minLength(6)]],\n            confirmPassword: ['', Validators.required],\n            acceptTerms: [false, Validators.requiredTrue],\n            role: ['', Validators.required]\n        }, {\n            validator: MustMatch('password', 'confirmPassword')\n        });\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.form.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        // reset alerts on submit\n        this.alertService.clear();\n\n        // stop here if form is invalid\n        if (this.form.invalid) {\n            return;\n        }\n\n        this.submitting = true;\n        this.accountService.register(this.form.value)\n            .pipe(first())\n            .subscribe({\n                next: () => {\n                    this.alertService.success('Registration successful, please check your email for verification instructions', { keepAfterRouteChange: true });\n                    this.router.navigate(['../login'], { relativeTo: this.route });\n                },\n                error: error => {\n                    this.alertService.error(error);\n                    this.submitting = false;\n                }\n            });\n    }\n}","<h3 class=\"card-header\">Register</h3>\n<div class=\"container pt-4\">\n    <div class=\"card-body\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"row\">\n                <div class=\"mb-3 col-2\">\n                    <label class=\"form-label\">Title</label>\n                    <select formControlName=\"title\" class=\"form-control dropdown \"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.title.errors }\">\n                        <option value=\"\"></option>\n                        <option value=\"Mr\">Mr</option>\n                        <option value=\"Mrs\">Mrs</option>\n                        <option value=\"Miss\">Miss</option>\n                        <option value=\"Ms\">Ms</option>\n                    </select>\n                    <div *ngIf=\"submitted && f.title.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.title.errors.required\">Title is required</div>\n                    </div>\n                </div>\n                <div class=\"mb-3 col-5\">\n                    <label class=\"form-label\">First Name</label>\n                    <input type=\"text\" formControlName=\"firstName\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" />\n                    <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\n                    </div>\n                </div>\n                <div class=\"mb-3 col-5\">\n                    <label class=\"form-label\">Last Name</label>\n                    <input type=\"text\" formControlName=\"lastName\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\n                    <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"mb-3\">\n                <label class=\"form-label\">Email</label>\n                <input type=\"text\" formControlName=\"email\" class=\"form-control\"\n                    [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n                <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                    <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                </div>\n            </div>\n            <div class=\"mb-3\">\n                <label class=\"form-label\">Contact Number</label>\n                <input type=\"text\" formControlName=\"contactNumber\" class=\"form-control\"\n                    [ngClass]=\"{ 'is-invalid': submitted && f.contactNumber.errors }\" />\n                <div *ngIf=\"submitted && f.contactNumber.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.contactNumber.errors.required\">Contact Number is required</div>\n                    <div *ngIf=\"f.contactNumber.errors.email\">Contact Number must be valid</div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"mb-3 col\">\n                    <label class=\"form-label\">Password</label>\n                    <input type=\"password\" formControlName=\"password\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                    <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                        <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\n                    </div>\n                </div>\n                <div class=\"mb-3 col\">\n                    <label class=\"form-label\">Confirm Password</label>\n                    <input type=\"password\" formControlName=\"confirmPassword\" class=\"form-control\"\n                        [ngClass]=\"{ 'is-invalid': submitted && f.confirmPassword.errors }\" />\n                    <div *ngIf=\"submitted && f.confirmPassword.errors\" class=\"invalid-feedback\">\n                        <div *ngIf=\"f.confirmPassword.errors.required\">Confirm Password is required</div>\n                        <div *ngIf=\"f.confirmPassword.errors.mustMatch\">Passwords must match</div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"mb-3\">\n                <label class=\"form-label\">Role</label>\n                <select formControlName=\"role\" class=\"form-control dropdown\"\n                    [ngClass]=\"{ 'is-invalid': submitted && f.role.errors }\">\n                    <option value=\"\"></option>\n                    <option value=\"Assistant\">Assistant</option>\n                    <option value=\"PromptAdmin\">PromptAdmin</option>\n                </select>\n                <div *ngIf=\"submitted && f.role.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.role.errors.required\">Please enter role</div>\n                </div>\n            </div>\n            <div class=\"mb-3 form-check\">\n                <input type=\"checkbox\" formControlName=\"acceptTerms\" id=\"acceptTerms\" class=\"form-check-input\"\n                    [ngClass]=\"{ 'is-invalid': submitted && f.acceptTerms.errors }\" />\n                <label for=\"acceptTerms\" class=\"form-check-label\">Accept Terms & Conditions</label>\n                <div *ngIf=\"submitted && f.acceptTerms.errors\" class=\"invalid-feedback\">Accept Ts & Cs is required</div>\n            </div>\n            <div class=\"mb-3\">\n                <button [disabled]=\"submitting\" class=\"btn btn-primary\">\n                    <span *ngIf=\"submitting\" class=\"spinner-border spinner-border-sm me-1\"></span>\n                    Register\n                </button>\n                <a routerLink=\"../login\" href=\"\" class=\"btn btn-link\">Cancel</a>\n            </div>\n        </form>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}